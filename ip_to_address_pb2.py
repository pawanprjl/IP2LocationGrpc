# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ip_to_address.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ip_to_address.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13ip_to_address.proto\"\x13\n\x02IP\x12\r\n\x05value\x18\x01 \x01(\t2%\n\x0bIpToAddress\x12\x16\n\x08Location\x12\x03.IP\x1a\x03.IP\"\x00\x62\x06proto3')
)




_IP = _descriptor.Descriptor(
  name='IP',
  full_name='IP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='IP.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=42,
)

DESCRIPTOR.message_types_by_name['IP'] = _IP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IP = _reflection.GeneratedProtocolMessageType('IP', (_message.Message,), {
  'DESCRIPTOR' : _IP,
  '__module__' : 'ip_to_address_pb2'
  # @@protoc_insertion_point(class_scope:IP)
  })
_sym_db.RegisterMessage(IP)



_IPTOADDRESS = _descriptor.ServiceDescriptor(
  name='IpToAddress',
  full_name='IpToAddress',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=44,
  serialized_end=81,
  methods=[
  _descriptor.MethodDescriptor(
    name='Location',
    full_name='IpToAddress.Location',
    index=0,
    containing_service=None,
    input_type=_IP,
    output_type=_IP,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IPTOADDRESS)

DESCRIPTOR.services_by_name['IpToAddress'] = _IPTOADDRESS

# @@protoc_insertion_point(module_scope)
